<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">

	<!-- 连接服务配置 如果MQ服务器在远程服务器上，请新建用户用新建的用户名密码 guest默认不允许远程登录 -->
	<rabbit:connection-factory id="connectionFactory"
		host="${rabbitmq.host}" port="${rabbitmq.port}" username="${rabbitmq.username}" password="${rabbitmq.password}" 
		virtual-host="/" channel-cache-size="50" />
	<!-- 配置爱admin，自动根据配置文件生成交换器和队列，无需手动配置 -->
	<rabbit:admin connection-factory="connectionFactory" />

	<!-- queue 队列声明 -->
	<rabbit:queue name="spring.topic.test1" durable="true" auto-delete="false" exclusive="false"  />
	<rabbit:queue name="spring.topic.test2" durable="true" auto-delete="false" exclusive="false"  />

    <!--配置topic类型exchange-->
    <rabbit:topic-exchange name="spring.topic.exchange" durable="true">
        <rabbit:bindings>
            <rabbit:binding queue="spring.topic.test1" pattern="spring.topic.test1.*" />
            <rabbit:binding queue="spring.topic.test2" pattern="spring.topic.test2.pattern" />
        </rabbit:bindings>
    </rabbit:topic-exchange>
	

	<!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />
    <!-- <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter" /> -->

	<!-- spring template声明 -->
	<rabbit:template id="amqpTemplate" exchange="spring.topic.exchange"
		routing-key="spring.topic.test1.*"
		connection-factory="connectionFactory"
		message-converter="jsonMessageConverter" />
		
	<bean id="receiveMessageListener"  class="com.bilin.rabbitmq.spring.QueueListenter" />  
       
    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->  
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto" >  
        <rabbit:listener queues="spring.topic.test1,spring.topic.test2" ref="receiveMessageListener" />  
    </rabbit:listener-container>
      
</beans>    
		